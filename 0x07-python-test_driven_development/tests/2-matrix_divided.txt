>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix = [
...     [1, 2],
...     [3, 4],
...     [5, 6]
... ]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0], [1.5, 2.0], [2.5, 3.0]]

>>> matrix = [
...     [1.5, 2.5, 3.5],
...     [4.5, 5.5, 6.5]
... ]
>>> matrix_divided(matrix, 1.5)
[[1.0, 1.67, 2.33], [3.0, 3.67, 4.33]]

>>> matrix = [
...     [1, 2],
...     [3, 4]
... ]
>>> matrix_divided(matrix, 0.5)
[[2.0, 4.0], [6.0, 8.0]]

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, '2')
Traceback (most recent call last):
  ...
TypeError: div must be a number

>>> matrix = [
...     [1, 2, 3],
...     [4, 5]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size

>>> matrix = [
...     [1, 2, 3],
...     '4',
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
